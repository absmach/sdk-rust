/*
 * SuperMQ reader service
 *
 * HTTP API for reading messages. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.15.1
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessagesPageMessagesInner {
    /// Unique channel id.
    #[serde(rename = "channel", skip_serializing_if = "Option::is_none")]
    pub channel: Option<i32>,
    /// Unique publisher id.
    #[serde(rename = "publisher", skip_serializing_if = "Option::is_none")]
    pub publisher: Option<i32>,
    /// Protocol name.
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<String>,
    /// Measured parameter name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Value unit.
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<String>,
    /// Measured value in number.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f64>,
    /// Measured value in string format.
    #[serde(rename = "stringValue", skip_serializing_if = "Option::is_none")]
    pub string_value: Option<String>,
    /// Measured value in boolean format.
    #[serde(rename = "boolValue", skip_serializing_if = "Option::is_none")]
    pub bool_value: Option<bool>,
    /// Measured value in binary format.
    #[serde(rename = "dataValue", skip_serializing_if = "Option::is_none")]
    pub data_value: Option<String>,
    /// Sum value.
    #[serde(rename = "valueSum", skip_serializing_if = "Option::is_none")]
    pub value_sum: Option<f64>,
    /// Time of measurement.
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<f64>,
    /// Time of updating measurement.
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<f64>,
}

impl MessagesPageMessagesInner {
    pub fn new() -> MessagesPageMessagesInner {
        MessagesPageMessagesInner {
            channel: None,
            publisher: None,
            protocol: None,
            name: None,
            unit: None,
            value: None,
            string_value: None,
            bool_value: None,
            data_value: None,
            value_sum: None,
            time: None,
            update_time: None,
        }
    }
}

