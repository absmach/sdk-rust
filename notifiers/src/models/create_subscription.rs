/*
 * SuperMQ Notifiers service
 *
 * HTTP API for Notifiers service. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.15.1
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateSubscription {
    /// Topic to which the user subscribes.
    #[serde(rename = "topic", skip_serializing_if = "Option::is_none")]
    pub topic: Option<String>,
    /// The contact of the user to which the notification will be sent.
    #[serde(rename = "contact", skip_serializing_if = "Option::is_none")]
    pub contact: Option<String>,
}

impl CreateSubscription {
    pub fn new() -> CreateSubscription {
        CreateSubscription {
            topic: None,
            contact: None,
        }
    }
}

