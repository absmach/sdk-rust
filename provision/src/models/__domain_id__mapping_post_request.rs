/*
 * SuperMQ Provision service
 *
 * HTTP API for Provision service Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.15.1
 * Contact: info@abstracmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DomainIdMappingPostRequest {
    #[serde(rename = "external_id")]
    pub external_id: String,
    #[serde(rename = "external_key")]
    pub external_key: String,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl DomainIdMappingPostRequest {
    pub fn new(external_id: String, external_key: String) -> DomainIdMappingPostRequest {
        DomainIdMappingPostRequest {
            external_id,
            external_key,
            name: None,
        }
    }
}

