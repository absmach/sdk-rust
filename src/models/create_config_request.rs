/*
 * SuperMQ Combined Service
 *
 * This is the SuperMQ Combined Service based on the OpenAPI 3.0 specification.  It is the HTTP API for managing SuperMQ. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.15.1
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateConfigRequest {
    /// External ID (MAC address or some unique identifier).
    #[serde(rename = "external_id")]
    pub external_id: String,
    /// External key.
    #[serde(rename = "external_key")]
    pub external_key: String,
    /// ID of the corresponding SuperMQ Client.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<uuid::Uuid>,
    #[serde(rename = "channels", skip_serializing_if = "Option::is_none")]
    pub channels: Option<Vec<uuid::Uuid>>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Client Certificate.
    #[serde(rename = "client_cert", skip_serializing_if = "Option::is_none")]
    pub client_cert: Option<String>,
    /// Client Private Key.
    #[serde(rename = "client_key", skip_serializing_if = "Option::is_none")]
    pub client_key: Option<String>,
    #[serde(rename = "ca_cert", skip_serializing_if = "Option::is_none")]
    pub ca_cert: Option<String>,
}

impl CreateConfigRequest {
    pub fn new(external_id: String, external_key: String) -> CreateConfigRequest {
        CreateConfigRequest {
            external_id,
            external_key,
            client_id: None,
            channels: None,
            content: None,
            name: None,
            client_cert: None,
            client_key: None,
            ca_cert: None,
        }
    }
}


